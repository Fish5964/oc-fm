<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.cardasset.supplementreduce.dao.TfamAssetOldDao">
  <sql id="tfamAssetOldColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.year AS "year",
      a.month AS "month",
      a.card_code AS "cardCode",
      a.asset_code AS "assetCode",
      a.business_date AS "businessDate",
      a.nature AS "nature",
      a.category_id AS "category.id",
      IFNULL(category.name,'') AS "category.name",
      IFNULL(category.fullname,'') AS "category.fullname",
      a.asset_name AS "assetName",
      a.spec AS "spec",
      a.card_model AS "cardModel",
      a.place AS "place",
      a.producer AS "producer",
      a.company_id AS "companyid",
      a.usedeptid AS "usedeptid",
      a.userid AS "userid.id",
      IFNULL(userid.name,'') AS "userid.name",
      a.num AS "num",
      a.unit AS "unit",
      a.usingstatus AS "usingstatus.id",
      IFNULL(usingstatus.name,'') AS "usingstatus.name",
      a.memo AS "memo",
      a.asset_accountid AS "assetAccountid",
      a.accudep_accountid AS "accudepAccountid",
      a.predevaluate_accountid AS "predevaluateAccountid",
      a.depcost_accountid AS "depcostAccountid",
      a.isproject AS "isproject",
      a.project_accountid AS "projectAccountid",
      a.predevaluate_coraccountid AS "predevaluateCoraccountid",
      a.tax_accountid AS "taxAccountid",
      a.value AS "value",
      a.rate AS "rate",
      a.tax AS "tax",
      a.accudep AS "accudep",
      a.predevaluate AS "predevaluate",
      a.netvalue AS "netvalue",
      a.salvagerate AS "salvagerate",
      a.salvage AS "salvage",
      a.depmethod AS "depmethod.code",
      IFNULL(depmethod.name,'') AS "depmethod.name",
      IFNULL(depmethod.id,'') AS "depmethod.id",
      a.naturemonth AS "naturemonth",
      a.servicemonth AS "servicemonth",
      a.deprate AS "deprate",
      a.depamount AS "depamount",
      a.allworkloan AS "allworkloan",
      a.workloanunit AS "workloanunit",
      a.add_reason AS "addReason",
      a.createrid AS "createrid.id",
      IFNULL(createrid.name,'') AS "createrid.name",
      IFNULL(createrid.empolyno,'') AS "createrid.empolyno",
      a.status AS "status",
      a.reduce_reason AS "reduceReason",
      a.lastyearaccudep AS "lastyearaccudep",
      a.usedmonth AS "usedmonth",
      a.changedmonth AS "changedmonth",
      a.scrap_date AS "scrapDate",
      a.company_id AS "companyId",
      a.businessdept AS "businessdept",
      a.employeeno AS "employeeno.empolyno",
      IFNULL(employeeno.name,'') AS "employeeno.name",
      IFNULL(employeeno.id,'') AS "employeeno.id",
      a.user_ascription AS "userAscription",
      a.asset_ascription AS "assetAscription",
      a.mac_address AS "macAddress",
      a.startup_date AS "startupDate",
      a.assetbrand AS "assetbrand",
      a.enable_date AS "enableDate",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="tfamAssetOldJoins">
    LEFT JOIN tfam_category category ON category.id = a.category_id
    LEFT JOIN sys_user userid ON userid.id = a.userid
    LEFT JOIN tfam_usingstatus usingstatus ON usingstatus.id = a.usingstatus
    LEFT JOIN tfam_depmethod depmethod ON depmethod.code = a.depmethod
    LEFT JOIN sys_user createrid ON createrid.id = a.createrid
    LEFT JOIN sys_user employeeno ON employeeno.empolyno = a.employeeno
  </sql>
  <delete id="truncateData">
    truncate table tfam_depfuture
  </delete>
  <resultMap id="resultTfamAssetOldMap" type="com.geeke.cardasset.supplementreduce.entity.TfamAssetOld">
    <result property="id" column="id" />
    <result property="year" column="year" />
    <result property="month" column="month" />
    <result property="cardCode" column="cardCode" />
    <result property="assetCode" column="assetCode" />
    <result property="businessDate" column="businessDate" />
    <result property="nature" column="nature" />
    <result property="assetName" column="assetName" />
    <result property="spec" column="spec" />
    <result property="cardModel" column="cardModel" />
    <result property="place" column="place" />
    <result property="producer" column="producer" />
    <result property="companyid" column="companyid" />
    <result property="usedeptid" column="usedeptid" />
    <result property="num" column="num" />
    <result property="unit" column="unit" />
    <result property="memo" column="memo" />
    <result property="assetAccountid" column="assetAccountid" />
    <result property="accudepAccountid" column="accudepAccountid" />
    <result property="predevaluateAccountid" column="predevaluateAccountid" />
    <result property="depcostAccountid" column="depcostAccountid" />
    <result property="isproject" column="isproject" />
    <result property="projectAccountid" column="projectAccountid" />
    <result property="predevaluateCoraccountid" column="predevaluateCoraccountid" />
    <result property="taxAccountid" column="taxAccountid" />
    <result property="value" column="value" />
    <result property="rate" column="rate" />
    <result property="tax" column="tax" />
    <result property="accudep" column="accudep" />
    <result property="predevaluate" column="predevaluate" />
    <result property="netvalue" column="netvalue" />
    <result property="salvagerate" column="salvagerate" />
    <result property="salvage" column="salvage" />
    <result property="naturemonth" column="naturemonth" />
    <result property="servicemonth" column="servicemonth" />
    <result property="deprate" column="deprate" />
    <result property="depamount" column="depamount" />
    <result property="allworkloan" column="allworkloan" />
    <result property="workloanunit" column="workloanunit" />
    <result property="addReason" column="addReason" />
    <result property="status" column="status" />
    <result property="reduceReason" column="reduceReason" />
    <result property="lastyearaccudep" column="lastyearaccudep" />
    <result property="usedmonth" column="usedmonth" />
    <result property="changedmonth" column="changedmonth" />
    <result property="scrapDate" column="scrapDate" />
    <result property="companyId" column="companyId" />
    <result property="businessdept" column="businessdept" />
    <result property="userAscription" column="userAscription" />
    <result property="assetAscription" column="assetAscription" />
    <result property="macAddress" column="macAddress" />
    <result property="startupDate" column="startupDate" />
    <result property="assetbrand" column="assetbrand" />
    <result property="enableDate" column="enableDate" />
    <result property="remarks" column="remarks" />
    <result property="createBy" column="createBy" />
    <result property="createDate" column="createDate" />
    <result property="updateBy" column="updateBy" />
    <result property="updateDate" column="updateDate" />
    <result property="delFlag" column="delFlag" />
    <association property="category" javaType="com.geeke.cardasset.supplementreduce.entity.TfamCategoryOld">
      <result property="id" column="category.id" />
      <result property="name" column="category.name" />
      <result property="fullname" column="category.fullname" />
    </association>
    <association property="userid" javaType="com.geeke.cardasset.supplementreduce.entity.SysUserOld">
      <result property="id" column="userid.id" />
      <result property="name" column="userid.name" />
    </association>
    <association property="usingstatus" javaType="com.geeke.cardasset.supplementreduce.entity.TfamUsingstatusOld">
      <result property="id" column="usingstatus.id" />
      <result property="name" column="usingstatus.name" />
    </association>
    <association property="depmethod" javaType="com.geeke.cardasset.supplementreduce.entity.TfamDepmethodOld">
      <result property="name" column="depmethod.name" />
      <result property="id" column="depmethod.id" />
    </association>
    <association property="createrid" javaType="com.geeke.cardasset.supplementreduce.entity.SysUserOld">
      <result property="id" column="createrid.id" />
      <result property="name" column="createrid.name" />
      <result property="empolyno" column="createrid.empolyno" />
    </association>
    <association property="employeeno" javaType="com.geeke.cardasset.supplementreduce.entity.SysUserOld">
      <result property="name" column="employeeno.name" />
      <result property="empolyno" column="employeeno.empolyno" />
      <result property="id" column="employeeno.id" />
    </association>
  </resultMap>
  <select id="get" resultMap="resultTfamAssetOldMap">
    SELECT
    <include refid="tfamAssetOldColumns" />
    FROM tfam_asset a
    <include refid="tfamAssetOldJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM tfam_asset a
    <include refid="tfamAssetOldJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultMap="resultTfamAssetOldMap">
    SELECT
    <include refid="tfamAssetOldColumns" />
    FROM tfam_asset a
    <include refid="tfamAssetOldJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultMap="resultTfamAssetOldMap">
    SELECT
    <include refid="tfamAssetOldColumns" />
    FROM tfam_asset a
    <include refid="tfamAssetOldJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
    <select id="getBusDate" resultType="java.util.Map">
      select max(concat(t.year, t.month)) as value from tfam_depmonth t
      where t.company_id=#{companyId}
    </select>
  <select id="getSysStartdate" resultType="java.util.Map">
    select t.value as value from tfam_default_settings t where t.item = 'sys_startdate' and t.company_id=#{companyId}
  </select>
  <select id="getDepreciationTime" resultType="java.util.Map">
    select t.value as value from tfam_default_settings t where t.item = 'depreciation_time' and t.company_id=#{companyId}
  </select>
  <select id="getAssetInfoByID" resultType="com.alibaba.fastjson.JSONObject">
    select ta.id, ta.year, ta.month, date_format(ta.business_date,'%Y-%m-%d') as business_date, ta.depmethod,
           ta.value, ta.netvalue,ta.salvage, ta.salvagerate, ta.accudep, ta.naturemonth, ta.servicemonth, ta.usedmonth,
           ta.lastyearaccudep, ta.allworkloan, ta.usingstatus, ta.changedmonth
    from tfam_asset ta
    where ta.id = #{cardid}
  </select>
  <select id="getLastMonthDep" resultType="com.alibaba.fastjson.JSONObject">
    select d.depmethod,d.dbflag
    from tfam_depsub d
      where d.asset_id = #{cardid}
      and d.year = #{substring}
        and d.month = #{substring1}
        and d.dep_type = 1
        and d.company_id = #{companyId}
  </select>
  <select id="getOldUsingStatus" resultType="com.alibaba.fastjson.JSONObject">
    select ta.id, ta.year, ta.month, date_format(ta.business_date,'%Y-%m-%d') as business_date,
           ta.depmethod, ta.value, ta.netvalue,ta.salvage, ta.salvagerate, ta.accudep, ta.naturemonth, ta.servicemonth, ta.usedmonth,
           ta.lastyearaccudep, ta.allworkloan, ta.usingstatus, ta.changedmonth
    from tfam_asset ta
    where ta.id = #{cardid}
  </select>
  <select id="getAssets" resultType="com.alibaba.fastjson.JSONObject">
    select distinct  a.id,  a.year,  a.month,  a.depmethod,  tu.code as usingstatus,  a.value,  a.netvalue,  a.salvage,  a.salvagerate,  a.allworkloan,  a.naturemonth,  a.servicemonth,  a.depamount,  a.deprate,  a.accudep,  a.lastyearaccudep,  a.usedmonth,  a.changedmonth,  r.year as a_year,
                     r.month as a_month
    from tfam_asset a
        inner join tfam_alter r on r.asset_id = a.id
        inner join tfam_change_type c on c.id = r.alter_type
        left join tfam_usingstatus tu on tu.id = a.usingstatus
    where a.status = 2  and tu.code != 5  and c.code = 1 and a.company_id=#{companyId}
  </select>
  <select id="getAssets1" resultType="com.alibaba.fastjson.JSONObject">
    select  a.id,  a.year,  a.month,  a.depmethod,  a.usingstatus,  a.value,  a.netvalue,  a.salvage,
            a.salvagerate,  a.allworkloan,  a.naturemonth,  a.servicemonth,  a.depamount,  a.deprate,
            a.accudep,  a.lastyearaccudep,  a.usedmonth,  a.changedmonth
    from tfam_asset a   inner join tfam_alter r on r.asset_id = a.id
        inner join tfam_change_type c on c.id = r.alter_type
    where a.status = 2  and a.usingstatus != 5  and c.code = 1
    <if test="depreciation_time=='1'  or depreciation_time==1">
      and a.business_date not like concat(#{year},'-',#{month},'%')
    </if>
  </select>
  <select id="getNoCheckAssets" resultType="com.alibaba.fastjson.JSONObject">
    select t.id
    from tfam_asset t
           inner join tfam_usingstatus tu on t.usingstatus =tu.id
    where t.status in(1,3)
      and tu.code != 5
      and t.company_id = #{companyId}
  </select>
  <select id="getWorkloadList" resultType="com.alibaba.fastjson.JSONObject">
    select t.id,
           t.asset_code,
           t.asset_name,
           t.workloanunit
    from tfam_asset t
           inner join tfam_alter a on a.asset_id = t.id
           inner join tfam_change_type c on c.id = a.alter_type
    where t.status = 2
      and t.usingstatus != 5
      and t.depmethod = 4
      and c.code = 1
      and concat(a.year, a.month) != concat(t.year, t.month)  and t.company_id=#{companyId}

  </select>
  <select id="loadInfo" resultType="com.alibaba.fastjson.JSONObject">
    select dm.id,
           dm.year,
           dm.month,
           case when dm.voucherid is not null and dm.voucherid != '' then 1 else 0 end as isvoucher,
           vn.uqnumberingid                                                            as numberingid,
           vn.varname                                                                  as numberingname,
           vm.intvouchernum                                                            as vouchernum,
           case when dm.year is not null and dm.month is not null then 1 else 0 end    as isdep
    from tfam_depmonth dm
           left join tgl_voucher_mains vm on vm.uqvoucherid = dm.voucherid
           left join tgl_voucher_numberings vn on vn.uqnumberingid = vm.uqnumbering
    where dm.year = #{year}
      and dm.month = #{month}
      and dm.company_id = #{companyid}
  </select>
  <select id="selectAssetRecord" resultType="com.alibaba.fastjson.JSONObject">
    SELECT td.asset_id, SUM(td.depamount) as depamount,
           ta.accudep_accountid AS depcost
    FROM tfam_depsub td
        LEFT JOIN tfam_asset ta ON ta.id = td.asset_id
    WHERE td.`year` = #{year} AND td.`month` = #{month}
    and td.company_id=#{companyid}
    GROUP BY ta.accudep_accountid
  </select>
  <select id="selectAssetRecordCopy" resultType="com.alibaba.fastjson.JSONObject">
    SELECT td.asset_id, SUM(td.depamount) as depamount,
           ta.accudep_accountid AS accudep
    FROM tfam_depsub td LEFT JOIN tfam_asset ta ON ta.id = td.asset_id
    WHERE td.`year`  = #{year} AND td.`month` = #{month}
      and td.company_id=#{companyid}
    GROUP BY ta.accudep_accountid
  </select>
  <select id="selectIntYearUqglobalperiodId" resultType="java.lang.String">
    select UQGLOBALPERIODID
    from tgl_global_periods
    where INTYEAR = #{year}
      and INTMONTH = #{month}
      and tenant_id = #{companyid}

  </select>
  <select id="selectDepcostAndAccudep" resultType="java.lang.String">
    SELECT SUM(td.depamount)
    FROM tfam_depsub td
    WHERE td.`year` = #{year} AND td.`month` = #{month}
    and td.company_id=#{companyid}
  </select>
  <select id="selectGlobalStatus" resultType="java.lang.String">
    select tgp.INTSTATUS
    from tgl_global_periods tgp
    where tgp.INTYEAR = #{year}
      AND tgp.INTMONTH = #{month}
      and tenant_id = #{companyid}
  </select>
  <select id="getYearDatePagecount" resultType="java.lang.Integer">
    select count(*) from (
    select td.id, td.asset_id, td.year as year, td.month,
           (select sum(a.value)from (select distinct d.asset_id, d.value from tfam_depfuture d)a) as value,
        sum(td.accudep) as accdep,
        sum(td.currdep) as currdep,
        sum(td.netvalue) as netvalue,
        (select sum(b.value) from tfam_depfuture b  where b.usingstatus=5 and b.year = td.year group by b.year)  as oldervalue,
        (select  count(distinct c.asset_id) from tfam_depfuture c) as number,
        #{type} as pro_type
    from tfam_depfuture td
    group by td.year
    order by td.year
      ) t
  </select>
  <select id="getYearDatePage" resultType="com.alibaba.fastjson.JSONObject">
    select td.id, td.asset_id, td.year as year, td.month,
           (select sum(a.value)from (select distinct d.asset_id, d.value from tfam_depfuture d)a) as value,
           sum(td.accudep) as accdep,
           sum(td.currdep) as currdep,
           sum(td.netvalue) as netvalue,
           (select sum(b.value) from tfam_depfuture b  where b.usingstatus=5 and b.year = td.year group by b.year)  as oldervalue,
           (select  count(distinct c.asset_id) from tfam_depfuture c) as number,
           #{type} as pro_type
    from tfam_depfuture td
    group by td.year
    order by td.year
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="getMonthDatePagecount" resultType="java.lang.Integer">
    select count(*)
    from (select td.id,
                 td.asset_id,
                 td.year                                                                                  as year,
                 td.month,
                 (select sum(a.value) from (select distinct d.asset_id, d.value from tfam_depfuture d) a) as value,
                 sum(td.accudep)                                                                          as accdep,
                 sum(td.currdep)                                                                          as currdep,
                 sum(td.netvalue)                                                                         as netvalue,
                 (select sum(b.value)
                  from tfam_depfuture b
                  where b.usingstatus = 5 and b.month = td.month
                  group by b.month)                                                                       as oldervalue,
                 (select count(distinct c.asset_id) from tfam_depfuture c)                                as number,
                 #{type}                                                                                  as pro_type
          from tfam_depfuture td
          group by td.month
          order by td.year, td.month
                     ) t
  </select>
  <select id="getMonthDatePage" resultType="com.alibaba.fastjson.JSONObject">
    select td.id,
           td.asset_id,
           td.year as year,td.month,
           (select sum(a.value)from (select distinct d.asset_id, d.value from tfam_depfuture d)a) as value,
           sum(td.accudep) as accdep,
           sum(td.currdep) as currdep,
           sum(td.netvalue) as netvalue,
           (select sum(b.value) from tfam_depfuture b      where b.usingstatus=5 and b.month = td.month        group by b.month)  as oldervalue,
           (select  count(distinct c.asset_id) from tfam_depfuture c) as number,
           #{type} as pro_type
    from tfam_depfuture td
    group by td.month
    order by td.year,td.month
    LIMIT #{limit} OFFSET #{offset}
  </select>

  <insert id="insert">
    INSERT INTO tfam_asset(
    <trim suffixOverrides=",">
      id,
      year,
      month,
      card_code,
      asset_code,
      business_date,
      nature,
      category_id,
      asset_name,
      spec,
      card_model,
      place,
      producer,
      companyid,
      usedeptid,
      userid,
      num,
      unit,
      usingstatus,
      memo,
      asset_accountid,
      accudep_accountid,
      predevaluate_accountid,
      depcost_accountid,
      isproject,
      project_accountid,
      predevaluate_coraccountid,
      tax_accountid,
      value,
      rate,
      tax,
      accudep,
      predevaluate,
      netvalue,
      salvagerate,
      salvage,
      depmethod,
      naturemonth,
      servicemonth,
      deprate,
      depamount,
      allworkloan,
      workloanunit,
      add_reason,
      createrid,
      status,
      reduce_reason,
      lastyearaccudep,
      usedmonth,
      changedmonth,
      scrap_date,
      company_id,
      businessdept,
      employeeno,
      user_ascription,
      asset_ascription,
      mac_address,
      startup_date,
      assetbrand,
      enable_date,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ year },
      #{ month },
      #{ cardCode },
      #{ assetCode },
      #{ businessDate },
      #{ nature },
      #{ category.id },
      #{ assetName },
      #{ spec },
      #{ cardModel },
      #{ place },
      #{ producer },
      #{ companyid },
      #{ usedeptid },
      #{ userid.id },
      #{ num },
      #{ unit },
      #{ usingstatus.id },
      #{ memo },
      #{ assetAccountid },
      #{ accudepAccountid },
      #{ predevaluateAccountid },
      #{ depcostAccountid },
      #{ isproject },
      #{ projectAccountid },
      #{ predevaluateCoraccountid },
      #{ taxAccountid },
      #{ value },
      #{ rate },
      #{ tax },
      #{ accudep },
      #{ predevaluate },
      #{ netvalue },
      #{ salvagerate },
      #{ salvage },
      #{ depmethod.code },
      #{ naturemonth },
      #{ servicemonth },
      #{ deprate },
      #{ depamount },
      #{ allworkloan },
      #{ workloanunit },
      #{ addReason },
      #{ createrid.id },
      #{ status },
      #{ reduceReason },
      #{ lastyearaccudep },
      #{ usedmonth },
      #{ changedmonth },
      #{ scrapDate },
      #{ companyId },
      #{ businessdept },
      #{ employeeno.empolyno },
      #{ userAscription },
      #{ assetAscription },
      #{ macAddress },
      #{ startupDate },
      #{ assetbrand },
      #{ enableDate },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE tfam_asset SET
    <trim suffixOverrides=",">
      year = #{ year },
      month = #{ month },
      card_code = #{ cardCode },
      asset_code = #{ assetCode },
      business_date = #{ businessDate },
      nature = #{ nature },
      category_id = #{ category.id },
      asset_name = #{ assetName },
      spec = #{ spec },
      card_model = #{ cardModel },
      place = #{ place },
      producer = #{ producer },
      companyid = #{ companyid },
      usedeptid = #{ usedeptid },
      userid = #{ userid.id },
      num = #{ num },
      unit = #{ unit },
      usingstatus = #{ usingstatus.id },
      memo = #{ memo },
      asset_accountid = #{ assetAccountid },
      accudep_accountid = #{ accudepAccountid },
      predevaluate_accountid = #{ predevaluateAccountid },
      depcost_accountid = #{ depcostAccountid },
      isproject = #{ isproject },
      project_accountid = #{ projectAccountid },
      predevaluate_coraccountid = #{ predevaluateCoraccountid },
      tax_accountid = #{ taxAccountid },
      value = #{ value },
      rate = #{ rate },
      tax = #{ tax },
      accudep = #{ accudep },
      predevaluate = #{ predevaluate },
      netvalue = #{ netvalue },
      salvagerate = #{ salvagerate },
      salvage = #{ salvage },
      depmethod = #{ depmethod.code },
      naturemonth = #{ naturemonth },
      servicemonth = #{ servicemonth },
      deprate = #{ deprate },
      depamount = #{ depamount },
      allworkloan = #{ allworkloan },
      workloanunit = #{ workloanunit },
      add_reason = #{ addReason },
      createrid = #{ createrid.id },
      status = #{ status },
      reduce_reason = #{ reduceReason },
      lastyearaccudep = #{ lastyearaccudep },
      usedmonth = #{ usedmonth },
      changedmonth = #{ changedmonth },
      scrap_date = #{ scrapDate },
      company_id = #{ companyId },
      businessdept = #{ businessdept },
      employeeno = #{ employeeno.empolyno },
      user_ascription = #{ userAscription },
      asset_ascription = #{ assetAscription },
      mac_address = #{ macAddress },
      startup_date = #{ startupDate },
      assetbrand = #{ assetbrand },
      enable_date = #{ enableDate },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE tfam_asset SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO tfam_asset(
    <trim suffixOverrides=",">
      id,
      year,
      month,
      card_code,
      asset_code,
      business_date,
      nature,
      category_id,
      asset_name,
      spec,
      card_model,
      place,
      producer,
      companyid,
      usedeptid,
      userid,
      num,
      unit,
      usingstatus,
      memo,
      asset_accountid,
      accudep_accountid,
      predevaluate_accountid,
      depcost_accountid,
      isproject,
      project_accountid,
      predevaluate_coraccountid,
      tax_accountid,
      value,
      rate,
      tax,
      accudep,
      predevaluate,
      netvalue,
      salvagerate,
      salvage,
      depmethod,
      naturemonth,
      servicemonth,
      deprate,
      depamount,
      allworkloan,
      workloanunit,
      add_reason,
      createrid,
      status,
      reduce_reason,
      lastyearaccudep,
      usedmonth,
      changedmonth,
      scrap_date,
      company_id,
      businessdept,
      employeeno,
      user_ascription,
      asset_ascription,
      mac_address,
      startup_date,
      assetbrand,
      enable_date,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.year},
        #{entity.month},
        #{entity.cardCode},
        #{entity.assetCode},
        #{entity.businessDate},
        #{entity.nature},
        #{entity.category.id},
        #{entity.assetName},
        #{entity.spec},
        #{entity.cardModel},
        #{entity.place},
        #{entity.producer},
        #{entity.companyid},
        #{entity.usedeptid},
        #{entity.userid.id},
        #{entity.num},
        #{entity.unit},
        #{entity.usingstatus.id},
        #{entity.memo},
        #{entity.assetAccountid},
        #{entity.accudepAccountid},
        #{entity.predevaluateAccountid},
        #{entity.depcostAccountid},
        #{entity.isproject},
        #{entity.projectAccountid},
        #{entity.predevaluateCoraccountid},
        #{entity.taxAccountid},
        #{entity.value},
        #{entity.rate},
        #{entity.tax},
        #{entity.accudep},
        #{entity.predevaluate},
        #{entity.netvalue},
        #{entity.salvagerate},
        #{entity.salvage},
        #{entity.depmethod.code},
        #{entity.naturemonth},
        #{entity.servicemonth},
        #{entity.deprate},
        #{entity.depamount},
        #{entity.allworkloan},
        #{entity.workloanunit},
        #{entity.addReason},
        #{entity.createrid.id},
        #{entity.status},
        #{entity.reduceReason},
        #{entity.lastyearaccudep},
        #{entity.usedmonth},
        #{entity.changedmonth},
        #{entity.scrapDate},
        #{entity.companyId},
        #{entity.businessdept},
        #{entity.employeeno.empolyno},
        #{entity.userAscription},
        #{entity.assetAscription},
        #{entity.macAddress},
        #{entity.startupDate},
        #{entity.assetbrand},
        #{entity.enableDate},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <insert id="addDepmonth">
    insert into tfam_depsub (id, year, month, date, asset_id, depamount,
                             dep_type, resaon, workloan, depmethod, value,accudep,
                             netvalue, creatorid, create_time, companyid,usingstatus)
    values(#{id},#{year},#{month},#{date},#{asset_id},#{depamount},#{dep_type},#{resaon},#{workloan},
           #{depmethod},#{value},#{accudep},#{netvalue},#{creatorid},#{create_time},#{companyid},#{usingstatus})
  </insert>
    <insert id="assetCopy">
      insert ignore tfam_asset_histroy (select * from tfam_asset where company_id=#{companyId})
    </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE tfam_asset
    <set>
      <trim prefix="year=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.year}
        </foreach>
      </trim>
      <trim prefix="month=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.month}
        </foreach>
      </trim>
      <trim prefix="card_code=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.cardCode}
        </foreach>
      </trim>
      <trim prefix="asset_code=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetCode}
        </foreach>
      </trim>
      <trim prefix="business_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.businessDate}
        </foreach>
      </trim>
      <trim prefix="nature=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.nature}
        </foreach>
      </trim>
      <trim prefix="category_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.category.id}
        </foreach>
      </trim>
      <trim prefix="asset_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetName}
        </foreach>
      </trim>
      <trim prefix="spec=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.spec}
        </foreach>
      </trim>
      <trim prefix="card_model=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.cardModel}
        </foreach>
      </trim>
      <trim prefix="place=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.place}
        </foreach>
      </trim>
      <trim prefix="producer=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.producer}
        </foreach>
      </trim>
      <trim prefix="companyid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.companyid}
        </foreach>
      </trim>
      <trim prefix="usedeptid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.usedeptid}
        </foreach>
      </trim>
      <trim prefix="userid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.userid.id}
        </foreach>
      </trim>
      <trim prefix="num=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.num}
        </foreach>
      </trim>
      <trim prefix="unit=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.unit}
        </foreach>
      </trim>
      <trim prefix="usingstatus=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.usingstatus.id}
        </foreach>
      </trim>
      <trim prefix="memo=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.memo}
        </foreach>
      </trim>
      <trim prefix="asset_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetAccountid}
        </foreach>
      </trim>
      <trim prefix="accudep_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.accudepAccountid}
        </foreach>
      </trim>
      <trim prefix="predevaluate_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.predevaluateAccountid}
        </foreach>
      </trim>
      <trim prefix="depcost_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.depcostAccountid}
        </foreach>
      </trim>
      <trim prefix="isproject=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.isproject}
        </foreach>
      </trim>
      <trim prefix="project_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.projectAccountid}
        </foreach>
      </trim>
      <trim prefix="predevaluate_coraccountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.predevaluateCoraccountid}
        </foreach>
      </trim>
      <trim prefix="tax_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.taxAccountid}
        </foreach>
      </trim>
      <trim prefix="value=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.value}
        </foreach>
      </trim>
      <trim prefix="rate=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.rate}
        </foreach>
      </trim>
      <trim prefix="tax=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.tax}
        </foreach>
      </trim>
      <trim prefix="accudep=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.accudep}
        </foreach>
      </trim>
      <trim prefix="predevaluate=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.predevaluate}
        </foreach>
      </trim>
      <trim prefix="netvalue=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.netvalue}
        </foreach>
      </trim>
      <trim prefix="salvagerate=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.salvagerate}
        </foreach>
      </trim>
      <trim prefix="salvage=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.salvage}
        </foreach>
      </trim>
      <trim prefix="depmethod=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.depmethod.code}
        </foreach>
      </trim>
      <trim prefix="naturemonth=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.naturemonth}
        </foreach>
      </trim>
      <trim prefix="servicemonth=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.servicemonth}
        </foreach>
      </trim>
      <trim prefix="deprate=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.deprate}
        </foreach>
      </trim>
      <trim prefix="depamount=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.depamount}
        </foreach>
      </trim>
      <trim prefix="allworkloan=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.allworkloan}
        </foreach>
      </trim>
      <trim prefix="workloanunit=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.workloanunit}
        </foreach>
      </trim>
      <trim prefix="add_reason=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.addReason}
        </foreach>
      </trim>
      <trim prefix="createrid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.createrid.id}
        </foreach>
      </trim>
      <trim prefix="status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.status}
        </foreach>
      </trim>
      <trim prefix="reduce_reason=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.reduceReason}
        </foreach>
      </trim>
      <trim prefix="lastyearaccudep=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.lastyearaccudep}
        </foreach>
      </trim>
      <trim prefix="usedmonth=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.usedmonth}
        </foreach>
      </trim>
      <trim prefix="changedmonth=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.changedmonth}
        </foreach>
      </trim>
      <trim prefix="scrap_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.scrapDate}
        </foreach>
      </trim>
      <trim prefix="company_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.companyId}
        </foreach>
      </trim>
      <trim prefix="businessdept=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.businessdept}
        </foreach>
      </trim>
      <trim prefix="employeeno=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.employeeno.empolyno}
        </foreach>
      </trim>
      <trim prefix="user_ascription=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.userAscription}
        </foreach>
      </trim>
      <trim prefix="asset_ascription=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetAscription}
        </foreach>
      </trim>
      <trim prefix="mac_address=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.macAddress}
        </foreach>
      </trim>
      <trim prefix="startup_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.startupDate}
        </foreach>
      </trim>
      <trim prefix="assetbrand=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetbrand}
        </foreach>
      </trim>
      <trim prefix="enable_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.enableDate}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE tfam_asset
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="depUpdate">
    update tfam_asset a set
      a.accudep = #{accudep},
      a.netvalue = #{netvalue}
    <if test="depflag ==  1 ">
      ,a.usingstatus =5
    </if>
    <if test="oldusingstatus !=  null  and oldusingstatus!=''  ">
      , a.usingstatus = #{oldusingstatus}
    </if>
    where a.id = #{cardid}
  </update>
  <update id="upChangedmonth">
    update tfam_asset a set a.changedmonth = #{usedmonth} where a.id = #{id}
  </update>
  <update id="upLastYearAccudep">
    update tfam_asset a set a.lastyearaccudep = a.accudep where a.id = #{id}
  </update>
  <update id="upUsedMonth">
    update tfam_asset a set a.usedmonth = a.usedmonth + 1 where a.id = #{id}
  </update>
  <update id="dateUpdate">
    update tfam_asset a set a.year = #{year}, a.month = #{month} where a.company_id=#{companyid}
  </update>
</mapper>