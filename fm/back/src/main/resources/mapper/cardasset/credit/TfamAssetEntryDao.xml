<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.cardasset.credit.dao.TfamAssetEntryDao">
  <sql id="tfamAssetEntryColumns">
    <trim suffixOverrides=",">
      distinct
      a.id AS "a.id",
      IFNULL(id.voucherid,'') AS "id.voucherid",
      a.year AS "year",
      a.month AS "month",
      a.card_code AS "cardCode",
      a.asset_code AS "assetCode",
      a.business_date AS "businessDate",
      a.nature AS "nature.id",
      IFNULL(nature.name,'') AS "nature.name",
      a.category_id AS "category.id",
      IFNULL(category.name,'') AS "category.name",
      IFNULL(category.fullname,'') AS "category.fullname",
      a.asset_name AS "assetName",
      a.spec AS "spec",
      a.card_model AS "cardModel",
      a.place AS "place",
      a.producer AS "producer",
      a.usedeptid AS "usedeptid.id",
      IFNULL(usedeptid.name,'') AS "usedeptid.name",
      a.userid AS "userid.id",
      IFNULL(userid.name,'') AS "userid.name",
      a.num AS "num",
      a.unit AS "unit",
      a.usingstatus AS "usingstatus.id",
      IFNULL(usingstatus.name,'') AS "usingstatus.name",
      a.memo AS "memo",
      a.asset_accountid AS "assetAccountid",
      a.accudep_accountid AS "accudepAccountid",
      a.predevaluate_accountid AS "predevaluateAccountid",
      a.depcost_accountid AS "depcostAccountid",
      a.isproject AS "isproject",
      a.project_accountid AS "projectAccountid",
      a.predevaluate_coraccountid AS "predevaluateCoraccountid",
      a.tax_accountid AS "taxAccountid",
      a.value AS "value",
      a.rate AS "rate",
      a.tax AS "tax",
      a.accudep AS "accudep",
      a.predevaluate AS "predevaluate",
      a.netvalue AS "netvalue",
      a.salvagerate AS "salvagerate",
      a.salvage AS "salvage",
      a.depmethod AS "depmethod.code",
      IFNULL(depmethod.name,'') AS "depmethod.name",
      IFNULL(depmethod.id,'') AS "depmethod.id",
      a.naturemonth AS "naturemonth",
      a.servicemonth AS "servicemonth",
      a.deprate AS "deprate",
      a.depamount AS "depamount",
      a.allworkloan AS "allworkloan",
      a.workloanunit AS "workloanunit",
      a.add_reason AS "addReason.id",
      IFNULL(addReason.name,'') AS "addReason.name",
      a.createrid AS "createrid.id",
      IFNULL(createrid.name,'') AS "createrid.name",
      IFNULL(createrid.empolyno,'') AS "createrid.empolyno",
      a.status AS "status",
      a.reduce_reason AS "reduceReason.id",
      IFNULL(reduceReason.name,'') AS "reduceReason.name",
      a.lastyearaccudep AS "lastyearaccudep",
      a.usedmonth AS "usedmonth",
      a.changedmonth AS "changedmonth",
      a.scrap_date AS "scrapDate",
      a.company_id AS "companyid",
      a.businessdept AS "businessdept",
      a.employeeno AS "employeeno.empolyno",
      IFNULL(employeeno.name,'') AS "employeeno.name",
      IFNULL(employeeno.id,'') AS "employeeno.id",
      a.user_ascription AS "userAscription",
      a.asset_ascription AS "assetAscription",
      a.mac_address AS "macAddress",
      a.startup_date AS "startupDate",
      a.assetbrand AS "assetbrand",
      a.enable_date AS "enableDate",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="tfamAssetEntryJoins">
    LEFT JOIN tfam_alter id ON id.asset_id  = a.id
    LEFT JOIN tfam_nature nature ON nature.id = a.nature
    LEFT JOIN tfam_category category ON category.id = a.category_id
    LEFT JOIN org_department usedeptid ON usedeptid.id = a.usedeptid
    LEFT JOIN sys_user userid ON userid.id = a.userid
    LEFT JOIN tfam_usingstatus usingstatus ON usingstatus.id = a.usingstatus
    LEFT JOIN tfam_depmethod depmethod ON depmethod.code = a.depmethod
    LEFT JOIN tfam_change_way addReason ON addReason.id = a.add_reason
    LEFT JOIN sys_user createrid ON createrid.id = a.createrid
    LEFT JOIN tfam_change_way reduceReason ON reduceReason.id = a.reduce_reason
    LEFT JOIN sys_user employeeno ON employeeno.id = a.userid
  </sql>
    <delete id="cancelVoucher">
      update tfam_alter d
      set d.voucherid = ''
      where d.id = #{id}
    </delete>
  <delete id="cancelVoucher1">
      update tfam_depsub d
      set d.voucherid = ''
      where d.id = #{id}
    </delete>
    <resultMap id="resultTfamAssetEntryMap" type="com.geeke.cardasset.credit.entity.TfamAssetEntry">
    <result property="id" column="a.id" />
    <result property="year" column="year" />
    <result property="month" column="month" />
    <result property="cardCode" column="cardCode" />
    <result property="assetCode" column="assetCode" />
    <result property="businessDate" column="businessDate" />
    <result property="assetName" column="assetName" />
    <result property="spec" column="spec" />
    <result property="cardModel" column="cardModel" />
    <result property="place" column="place" />
    <result property="producer" column="producer" />
    <result property="companyid" column="companyid" />
    <result property="num" column="num" />
    <result property="unit" column="unit" />
    <result property="memo" column="memo" />
    <result property="assetAccountid" column="assetAccountid" />
    <result property="accudepAccountid" column="accudepAccountid" />
    <result property="predevaluateAccountid" column="predevaluateAccountid" />
    <result property="depcostAccountid" column="depcostAccountid" />
    <result property="isproject" column="isproject" />
    <result property="projectAccountid" column="projectAccountid" />
    <result property="predevaluateCoraccountid" column="predevaluateCoraccountid" />
    <result property="taxAccountid" column="taxAccountid" />
    <result property="value" column="value" />
    <result property="rate" column="rate" />
    <result property="tax" column="tax" />
    <result property="accudep" column="accudep" />
    <result property="predevaluate" column="predevaluate" />
    <result property="netvalue" column="netvalue" />
    <result property="salvagerate" column="salvagerate" />
    <result property="salvage" column="salvage" />
    <result property="naturemonth" column="naturemonth" />
    <result property="servicemonth" column="servicemonth" />
    <result property="deprate" column="deprate" />
    <result property="depamount" column="depamount" />
    <result property="allworkloan" column="allworkloan" />
    <result property="workloanunit" column="workloanunit" />
    <result property="status" column="status" />
    <result property="lastyearaccudep" column="lastyearaccudep" />
    <result property="usedmonth" column="usedmonth" />
    <result property="changedmonth" column="changedmonth" />
    <result property="scrapDate" column="scrapDate" />
    <result property="companyId" column="companyId" />
    <result property="businessdept" column="businessdept" />
    <result property="userAscription" column="userAscription" />
    <result property="assetAscription" column="assetAscription" />
    <result property="macAddress" column="macAddress" />
    <result property="startupDate" column="startupDate" />
    <result property="assetbrand" column="assetbrand" />
    <result property="enableDate" column="enableDate" />
    <result property="remarks" column="remarks" />
    <result property="createBy" column="createBy" />
    <result property="createDate" column="createDate" />
    <result property="updateBy" column="updateBy" />
    <result property="updateDate" column="updateDate" />
    <result property="delFlag" column="delFlag" />
    <association property="tfamAlterEntry" javaType="com.geeke.cardasset.credit.entity.TfamAlterEntry">
      <result property="id" column="tfamAlterEntry.id" />
      <result property="voucherid.uqvoucherid" column="tfamAlterEntry.voucherid" />
    </association>
    <association property="nature" javaType="com.geeke.cardasset.credit.entity.TfamNatureEntry">
      <result property="name" column="nature.name" />
      <result property="id" column="nature.id" />
    </association>
    <association property="category" javaType="com.geeke.cardasset.credit.entity.TfamCategoryEntry">
      <result property="id" column="category.id" />
      <result property="name" column="category.name" />
      <result property="fullname" column="category.fullname" />
    </association>
    <association property="usedeptid" javaType="com.geeke.cardasset.credit.entity.OrgDepartmentEntry">
      <result property="id" column="usedeptid.id" />
      <result property="name" column="usedeptid.name" />
    </association>
    <association property="userid" javaType="com.geeke.cardasset.credit.entity.SysUserEntry">
      <result property="id" column="userid.id" />
      <result property="name" column="userid.name" />
    </association>
    <association property="usingstatus" javaType="com.geeke.cardasset.credit.entity.TfamUsingstatusEntry">
      <result property="id" column="usingstatus.id" />
      <result property="name" column="usingstatus.name" />
    </association>
    <association property="depmethod" javaType="com.geeke.cardasset.credit.entity.TfamDepmethodEntry">
      <result property="name" column="depmethod.name" />
      <result property="id" column="depmethod.id" />
    </association>
    <association property="addReason" javaType="com.geeke.cardasset.credit.entity.TfamChangeWayEntry">
      <result property="id" column="addReason.id" />
      <result property="name" column="addReason.name" />
    </association>
    <association property="createrid" javaType="com.geeke.cardasset.credit.entity.SysUserEntry">
      <result property="id" column="createrid.id" />
      <result property="name" column="createrid.name" />
      <result property="empolyno" column="createrid.empolyno" />
    </association>
    <association property="reduceReason" javaType="com.geeke.cardasset.credit.entity.TfamChangeWayEntry">
      <result property="id" column="reduceReason.id" />
      <result property="name" column="reduceReason.name" />
    </association>
    <association property="employeeno" javaType="com.geeke.cardasset.credit.entity.SysUserEntry">
      <result property="name" column="employeeno.name" />
      <result property="empolyno" column="employeeno.empolyno" />
      <result property="id" column="employeeno.id" />
    </association>
  </resultMap>
  <select id="get" resultMap="resultTfamAssetEntryMap">
    SELECT
    <include refid="tfamAssetEntryColumns" />
    FROM tfam_asset a
    <include refid="tfamAssetEntryJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*)  FROM (
    SELECT
    <include refid="tfamAssetEntryColumns" />
    FROM tfam_asset a
    <include refid="tfamAssetEntryJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    ) aa
  </select>
  <select id="listPage" resultMap="resultTfamAssetEntryMap">
    SELECT
    <include refid="tfamAssetEntryColumns" />
    FROM tfam_asset a
    <include refid="tfamAssetEntryJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultMap="resultTfamAssetEntryMap">
    SELECT
    <include refid="tfamAssetEntryColumns" />
    FROM tfam_asset a
    <include refid="tfamAssetEntryJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO tfam_asset(
    <trim suffixOverrides=",">
      id,
      year,
      month,
      card_code,
      asset_code,
      business_date,
      nature,
      category_id,
      asset_name,
      spec,
      card_model,
      place,
      producer,
      companyid,
      usedeptid,
      userid,
      num,
      unit,
      usingstatus,
      memo,
      asset_accountid,
      accudep_accountid,
      predevaluate_accountid,
      depcost_accountid,
      isproject,
      project_accountid,
      predevaluate_coraccountid,
      tax_accountid,
      value,
      rate,
      tax,
      accudep,
      predevaluate,
      netvalue,
      salvagerate,
      salvage,
      depmethod,
      naturemonth,
      servicemonth,
      deprate,
      depamount,
      allworkloan,
      workloanunit,
      add_reason,
      createrid,
      status,
      reduce_reason,
      lastyearaccudep,
      usedmonth,
      changedmonth,
      scrap_date,
      company_id,
      businessdept,
      employeeno,
      user_ascription,
      asset_ascription,
      mac_address,
      startup_date,
      assetbrand,
      enable_date,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id.id },
      #{ year },
      #{ month },
      #{ cardCode },
      #{ assetCode },
      #{ businessDate },
      #{ nature.id },
      #{ category.id },
      #{ assetName },
      #{ spec },
      #{ cardModel },
      #{ place },
      #{ producer },
      #{ companyid },
      #{ usedeptid.id },
      #{ userid.id },
      #{ num },
      #{ unit },
      #{ usingstatus.id },
      #{ memo },
      #{ assetAccountid },
      #{ accudepAccountid },
      #{ predevaluateAccountid },
      #{ depcostAccountid },
      #{ isproject },
      #{ projectAccountid },
      #{ predevaluateCoraccountid },
      #{ taxAccountid },
      #{ value },
      #{ rate },
      #{ tax },
      #{ accudep },
      #{ predevaluate },
      #{ netvalue },
      #{ salvagerate },
      #{ salvage },
      #{ depmethod.code },
      #{ naturemonth },
      #{ servicemonth },
      #{ deprate },
      #{ depamount },
      #{ allworkloan },
      #{ workloanunit },
      #{ addReason.id },
      #{ createrid.id },
      #{ status },
      #{ reduceReason.id },
      #{ lastyearaccudep },
      #{ usedmonth },
      #{ changedmonth },
      #{ scrapDate },
      #{ companyId },
      #{ businessdept },
      #{ employeeno.empolyno },
      #{ userAscription },
      #{ assetAscription },
      #{ macAddress },
      #{ startupDate },
      #{ assetbrand },
      #{ enableDate },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE tfam_asset SET
    <trim suffixOverrides=",">
      year = #{ year },
      month = #{ month },
      card_code = #{ cardCode },
      asset_code = #{ assetCode },
      business_date = #{ businessDate },
      nature = #{ nature.id },
      category_id = #{ category.id },
      asset_name = #{ assetName },
      spec = #{ spec },
      card_model = #{ cardModel },
      place = #{ place },
      producer = #{ producer },
      companyid = #{ companyid },
      usedeptid = #{ usedeptid.id },
      userid = #{ userid.id },
      num = #{ num },
      unit = #{ unit },
      usingstatus = #{ usingstatus.id },
      memo = #{ memo },
      asset_accountid = #{ assetAccountid },
      accudep_accountid = #{ accudepAccountid },
      predevaluate_accountid = #{ predevaluateAccountid },
      depcost_accountid = #{ depcostAccountid },
      isproject = #{ isproject },
      project_accountid = #{ projectAccountid },
      predevaluate_coraccountid = #{ predevaluateCoraccountid },
      tax_accountid = #{ taxAccountid },
      value = #{ value },
      rate = #{ rate },
      tax = #{ tax },
      accudep = #{ accudep },
      predevaluate = #{ predevaluate },
      netvalue = #{ netvalue },
      salvagerate = #{ salvagerate },
      salvage = #{ salvage },
      depmethod = #{ depmethod.code },
      naturemonth = #{ naturemonth },
      servicemonth = #{ servicemonth },
      deprate = #{ deprate },
      depamount = #{ depamount },
      allworkloan = #{ allworkloan },
      workloanunit = #{ workloanunit },
      add_reason = #{ addReason.id },
      createrid = #{ createrid.id },
      status = #{ status },
      reduce_reason = #{ reduceReason.id },
      lastyearaccudep = #{ lastyearaccudep },
      usedmonth = #{ usedmonth },
      changedmonth = #{ changedmonth },
      scrap_date = #{ scrapDate },
      company_id = #{ companyId },
      businessdept = #{ businessdept },
      employeeno = #{ employeeno.empolyno },
      user_ascription = #{ userAscription },
      asset_ascription = #{ assetAscription },
      mac_address = #{ macAddress },
      startup_date = #{ startupDate },
      assetbrand = #{ assetbrand },
      enable_date = #{ enableDate },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE tfam_asset SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO tfam_asset(
    <trim suffixOverrides=",">
      id,
      year,
      month,
      card_code,
      asset_code,
      business_date,
      nature,
      category_id,
      asset_name,
      spec,
      card_model,
      place,
      producer,
      companyid,
      usedeptid,
      userid,
      num,
      unit,
      usingstatus,
      memo,
      asset_accountid,
      accudep_accountid,
      predevaluate_accountid,
      depcost_accountid,
      isproject,
      project_accountid,
      predevaluate_coraccountid,
      tax_accountid,
      value,
      rate,
      tax,
      accudep,
      predevaluate,
      netvalue,
      salvagerate,
      salvage,
      depmethod,
      naturemonth,
      servicemonth,
      deprate,
      depamount,
      allworkloan,
      workloanunit,
      add_reason,
      createrid,
      status,
      reduce_reason,
      lastyearaccudep,
      usedmonth,
      changedmonth,
      scrap_date,
      company_id,
      businessdept,
      employeeno,
      user_ascription,
      asset_ascription,
      mac_address,
      startup_date,
      assetbrand,
      enable_date,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id.id},
        #{entity.year},
        #{entity.month},
        #{entity.cardCode},
        #{entity.assetCode},
        #{entity.businessDate},
        #{entity.nature.id},
        #{entity.category.id},
        #{entity.assetName},
        #{entity.spec},
        #{entity.cardModel},
        #{entity.place},
        #{entity.producer},
        #{entity.companyid},
        #{entity.usedeptid.id},
        #{entity.userid.id},
        #{entity.num},
        #{entity.unit},
        #{entity.usingstatus.id},
        #{entity.memo},
        #{entity.assetAccountid},
        #{entity.accudepAccountid},
        #{entity.predevaluateAccountid},
        #{entity.depcostAccountid},
        #{entity.isproject},
        #{entity.projectAccountid},
        #{entity.predevaluateCoraccountid},
        #{entity.taxAccountid},
        #{entity.value},
        #{entity.rate},
        #{entity.tax},
        #{entity.accudep},
        #{entity.predevaluate},
        #{entity.netvalue},
        #{entity.salvagerate},
        #{entity.salvage},
        #{entity.depmethod.code},
        #{entity.naturemonth},
        #{entity.servicemonth},
        #{entity.deprate},
        #{entity.depamount},
        #{entity.allworkloan},
        #{entity.workloanunit},
        #{entity.addReason.id},
        #{entity.createrid.id},
        #{entity.status},
        #{entity.reduceReason.id},
        #{entity.lastyearaccudep},
        #{entity.usedmonth},
        #{entity.changedmonth},
        #{entity.scrapDate},
        #{entity.companyId},
        #{entity.businessdept},
        #{entity.employeeno.empolyno},
        #{entity.userAscription},
        #{entity.assetAscription},
        #{entity.macAddress},
        #{entity.startupDate},
        #{entity.assetbrand},
        #{entity.enableDate},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE tfam_asset
    <set>
      <trim prefix="year=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.year}
        </foreach>
      </trim>
      <trim prefix="month=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.month}
        </foreach>
      </trim>
      <trim prefix="card_code=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.cardCode}
        </foreach>
      </trim>
      <trim prefix="asset_code=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetCode}
        </foreach>
      </trim>
      <trim prefix="business_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.businessDate}
        </foreach>
      </trim>
      <trim prefix="nature=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.nature.id}
        </foreach>
      </trim>
      <trim prefix="category_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.category.id}
        </foreach>
      </trim>
      <trim prefix="asset_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetName}
        </foreach>
      </trim>
      <trim prefix="spec=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.spec}
        </foreach>
      </trim>
      <trim prefix="card_model=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.cardModel}
        </foreach>
      </trim>
      <trim prefix="place=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.place}
        </foreach>
      </trim>
      <trim prefix="producer=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.producer}
        </foreach>
      </trim>
      <trim prefix="companyid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.companyid}
        </foreach>
      </trim>
      <trim prefix="usedeptid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.usedeptid.id}
        </foreach>
      </trim>
      <trim prefix="userid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.userid.id}
        </foreach>
      </trim>
      <trim prefix="num=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.num}
        </foreach>
      </trim>
      <trim prefix="unit=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.unit}
        </foreach>
      </trim>
      <trim prefix="usingstatus=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.usingstatus.id}
        </foreach>
      </trim>
      <trim prefix="memo=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.memo}
        </foreach>
      </trim>
      <trim prefix="asset_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetAccountid}
        </foreach>
      </trim>
      <trim prefix="accudep_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.accudepAccountid}
        </foreach>
      </trim>
      <trim prefix="predevaluate_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.predevaluateAccountid}
        </foreach>
      </trim>
      <trim prefix="depcost_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.depcostAccountid}
        </foreach>
      </trim>
      <trim prefix="isproject=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.isproject}
        </foreach>
      </trim>
      <trim prefix="project_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.projectAccountid}
        </foreach>
      </trim>
      <trim prefix="predevaluate_coraccountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.predevaluateCoraccountid}
        </foreach>
      </trim>
      <trim prefix="tax_accountid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.taxAccountid}
        </foreach>
      </trim>
      <trim prefix="value=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.value}
        </foreach>
      </trim>
      <trim prefix="rate=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.rate}
        </foreach>
      </trim>
      <trim prefix="tax=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.tax}
        </foreach>
      </trim>
      <trim prefix="accudep=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.accudep}
        </foreach>
      </trim>
      <trim prefix="predevaluate=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.predevaluate}
        </foreach>
      </trim>
      <trim prefix="netvalue=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.netvalue}
        </foreach>
      </trim>
      <trim prefix="salvagerate=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.salvagerate}
        </foreach>
      </trim>
      <trim prefix="salvage=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.salvage}
        </foreach>
      </trim>
      <trim prefix="depmethod=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.depmethod.code}
        </foreach>
      </trim>
      <trim prefix="naturemonth=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.naturemonth}
        </foreach>
      </trim>
      <trim prefix="servicemonth=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.servicemonth}
        </foreach>
      </trim>
      <trim prefix="deprate=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.deprate}
        </foreach>
      </trim>
      <trim prefix="depamount=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.depamount}
        </foreach>
      </trim>
      <trim prefix="allworkloan=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.allworkloan}
        </foreach>
      </trim>
      <trim prefix="workloanunit=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.workloanunit}
        </foreach>
      </trim>
      <trim prefix="add_reason=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.addReason.id}
        </foreach>
      </trim>
      <trim prefix="createrid=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.createrid.id}
        </foreach>
      </trim>
      <trim prefix="status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.status}
        </foreach>
      </trim>
      <trim prefix="reduce_reason=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.reduceReason.id}
        </foreach>
      </trim>
      <trim prefix="lastyearaccudep=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.lastyearaccudep}
        </foreach>
      </trim>
      <trim prefix="usedmonth=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.usedmonth}
        </foreach>
      </trim>
      <trim prefix="changedmonth=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.changedmonth}
        </foreach>
      </trim>
      <trim prefix="scrap_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.scrapDate}
        </foreach>
      </trim>
      <trim prefix="company_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.companyId}
        </foreach>
      </trim>
      <trim prefix="businessdept=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.businessdept}
        </foreach>
      </trim>
      <trim prefix="employeeno=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.employeeno.empolyno}
        </foreach>
      </trim>
      <trim prefix="user_ascription=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.userAscription}
        </foreach>
      </trim>
      <trim prefix="asset_ascription=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetAscription}
        </foreach>
      </trim>
      <trim prefix="mac_address=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.macAddress}
        </foreach>
      </trim>
      <trim prefix="startup_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.startupDate}
        </foreach>
      </trim>
      <trim prefix="assetbrand=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.assetbrand}
        </foreach>
      </trim>
      <trim prefix="enable_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.enableDate}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE tfam_asset
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
    <update id="linkVoucher">
      update tfam_alter a
      set a.voucherid = #{voucherid}
      where a.id =#{s}
    </update>
  <update id="linkVoucher1">
      update tfam_depsub a
      set a.voucherid = #{voucherid}
      where a.id =#{s}
    </update>
</mapper>